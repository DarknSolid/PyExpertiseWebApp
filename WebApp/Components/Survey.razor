@using WebApp.Models;


<MudText Typo="Typo.h3" GutterBottom="true">Expertise Self-Assessment</MudText>
<MudDivider Light="true" />
<MudCard>
    <MudCardHeader>
        <MudText>Rate from 1-5 your own assessment of the following @(Libraries.Count()) libraries that you have used.</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudText>1 = I barely understand this library and I need to google for answers</MudText>
        <MudText Class="mb-5">5 = I have a very good understanding of this library and I barely need to google for answers</MudText>
        <div class="d-flex flex-column gap-10">

            @foreach (var library in Libraries)
            {
                <div>
                    <MudText>@library</MudText>
                    <MudSlider TickMarks="true"
                           TickMarkLabels="@_labels"
                           Value="_surveyModel.Answers[library]"
                           Step="1"
                           Max="5"
                           Min="1"
                           @onchange=@((ChangeEventArgs e) => OnSliderChange(library, e)) />
                </div>
            }
        </div>

    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="OnSubmitPressed">Submit</MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter, EditorRequired]
    public Func<SurveyModel, Task> OnSubmit { get; set; }

    [Parameter, EditorRequired]
    public IEnumerable<string> Libraries { get; set; }

    private SurveyModel _surveyModel;

    private string[] _labels = new string[] { "1", "2", "3", "4", "5" };

    public Survey()
    {
        _surveyModel = new();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        // Initialize answers with ones
        foreach (string library in Libraries)
        {
            if (!_surveyModel.Answers.ContainsKey(library))
            {
                _surveyModel.Answers.Add(library, 1);
            }
        }
    }

    private void OnSliderChange(string key, ChangeEventArgs args)
    {
        int value = int.Parse((string)args.Value);
        _surveyModel.Answers[key] = value;
    }

    private async Task OnSubmitPressed()
    {
        await OnSubmit(_surveyModel);
    }


}
